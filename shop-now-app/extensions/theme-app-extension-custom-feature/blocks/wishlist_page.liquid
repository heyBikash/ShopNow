<section
  class="wishlist-card"
  style="
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
    background-color: {{ section.settings.background_color }};
  "
>
  <div class="page-width">
    <h2 class="wishlist-heading">{{ section.settings.heading }}</h2>
    <div id="wishlist-container"></div>
  </div>
</section>

<style>
    #wishlist-container {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 20px;
    }
    
    .wishlist-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        text-align: center;
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 15px;
        height: fit-content;
    }
    
    .remove-wishlist-item-btn {
        border: 1px solid black;
        padding: 5px 20px;
        border-radius: 10px;
        cursor: pointer;
        margin-top: 10px; /* Added spacing */
    }
    
    .remove-wishlist-item-btn:hover {
        background-color: grey;
        color: white;
    }
    
    @media (max-width: 992px) {
      #wishlist-container {
        grid-template-columns: repeat(2, 1fr);
      }
    }
    
    @media (max-width: 600px) {
      #wishlist-container {
        grid-template-columns: 1fr;
      }
    }
</style>

<script>
    let data;
    const wishlistContainer = document.getElementById("wishlist-container");

    // Function to render the wishlist items
    function renderWishlist() {
        try {
            const localStorageData = localStorage.getItem("wishlist");
            if (localStorageData) {
                data = JSON.parse(localStorageData);
            } else {
                data = "No item added to wishlist";
            }
        } catch (err) {
            console.error("Something went wrong while parsing localStorage data:", err);
            data = "Error retrieving wishlist data";
        }

        if (Array.isArray(data) && data.length > 0) {
            const wishlistHtml = data.map(item => `
                <div class="wishlist-item" data-product-id="${item.id}">
                    <a href="/products/${item.handle}">
                        <img src="${item.featured_image}" alt="${item.title}" loading="lazy">
                        <h3>${item.title}</h3>
                    </a>
                    <p>${item.price}</p>
                    <button class="remove-wishlist-item-btn" data-product-id="${item.id}">Remove</button>
                </div>
            `).join('');
            
            wishlistContainer.innerHTML = wishlistHtml;
        } else {
            wishlistContainer.innerHTML = `<p>${data}</p>`;
        }
    }

    // Function to handle removing an item and updating localStorage
    function handleRemoveItem(productId) {
        if (!Array.isArray(data)) return;

        data = data.filter(item => item.id !== productId);
        localStorage.setItem("wishlist", JSON.stringify(data));
        
        renderWishlist(); // Re-render the UI to reflect changes
    }

    // Use event delegation on the parent container for robust event handling
    wishlistContainer.addEventListener('click', (event) => {
        const targetButton = event.target.closest('.remove-wishlist-item-btn');
        if (targetButton) {
            const productId = targetButton.dataset.productId;
            handleRemoveItem(productId);
        }
    });

    // Initial render when the page loads
    renderWishlist();
</script>

{%- schema -%}
{
    "name": "wishlist-card",
    "target": "section",
    "settings": [
        {
            "type": "text",
            "id": "heading",
            "label": "Heading",
            "default": "My Wishlist"
        },
        {
            "type": "range",
            "id": "padding_top",
            "label": "Top padding",
            "min": 0,
            "max": 100,
            "step": 5,
            "unit": "px",
            "default": 30
        },
        {
            "type": "range",
            "id": "padding_bottom",
            "label": "Bottom padding",
            "min": 0,
            "max": 100,
            "step": 5,
            "unit": "px",
            "default": 30
        },
        {
            "type": "color",
            "id": "background_color",
            "label": "Background color",
            "default": "#ffffff"
        }
    ]
}
{%- endschema -%}
